{
	"id": "2a9ecbf925c12b020576f86ee13ffda8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/zombiefactory.sol": {
				"content": "pragma solidity >=0.5.0 <0.6.0;\r\n\r\nimport \"./ownable.sol\";\r\n\r\ncontract ZombieFactory is Ownable {\r\n\r\n    event NewZombie(uint zombieId, string name, uint dna);\r\n\r\n    uint dnaDigits = 16;\r\n    uint dnaModulus = 10 ** dnaDigits;\r\n    uint cooldownTime = 1 days;\r\n\r\n    struct Zombie {\r\n      string name;\r\n      uint dna;\r\n      uint32 level;\r\n      uint32 readyTime;\r\n      uint16 winCount;\r\n      uint16 lossCount;\r\n    }\r\n\r\n    Zombie[] public zombies;\r\n\r\n    mapping (uint => address) public zombieToOwner;\r\n    mapping (address => uint) ownerZombieCount;\r\n\r\n    function _createZombie(string memory _name, uint _dna) internal {\r\n        uint id = zombies.push(Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0)) - 1;\r\n        zombieToOwner[id] = msg.sender;\r\n        ownerZombieCount[msg.sender]++;\r\n        emit NewZombie(id, _name, _dna);\r\n    }\r\n\r\n    function _generateRandomDna(string memory _str) private view returns (uint) {\r\n        uint rand = uint(keccak256(abi.encodePacked(_str)));\r\n        return rand % dnaModulus;\r\n    }\r\n\r\n    function createRandomZombie(string memory _name) public {\r\n        require(ownerZombieCount[msg.sender] == 0);\r\n        uint randDna = _generateRandomDna(_name);\r\n        randDna = randDna - randDna % 100;\r\n        _createZombie(_name, randDna);\r\n    }\r\n\r\n}\r\n"
			},
			"contracts/ownable.sol": {
				"content": "pragma solidity >=0.5.0 <0.6.0;\r\n\r\n  /**\r\n  * @title Ownable\r\n  * @dev The Ownable contract has an owner address, and provides basic authorization control\r\n  * functions, this simplifies the implementation of \"user permissions\".\r\n  */\r\n  contract Ownable {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(\r\n      address indexed previousOwner,\r\n      address indexed newOwner\r\n    );\r\n\r\n    /**\r\n    * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n    * account.\r\n    */\r\n    constructor() internal {\r\n      _owner = msg.sender;\r\n      emit OwnershipTransferred(address(0), _owner);\r\n    }\r\n\r\n    /**\r\n    * @return the address of the owner.\r\n    */\r\n    function owner() public view returns(address) {\r\n      return _owner;\r\n    }\r\n\r\n    /**\r\n    * @dev Throws if called by any account other than the owner.\r\n    */\r\n    modifier onlyOwner() {\r\n      require(isOwner());\r\n      _;\r\n    }\r\n\r\n    /**\r\n    * @return true if `msg.sender` is the owner of the contract.\r\n    */\r\n    function isOwner() public view returns(bool) {\r\n      return msg.sender == _owner;\r\n    }\r\n\r\n    /**\r\n    * @dev Allows the current owner to relinquish control of the contract.\r\n    * @notice Renouncing to ownership will leave the contract without an owner.\r\n    * It will not be possible to call the functions with the `onlyOwner`\r\n    * modifier anymore.\r\n    */\r\n    function renounceOwnership() public onlyOwner {\r\n      emit OwnershipTransferred(_owner, address(0));\r\n      _owner = address(0);\r\n    }\r\n\r\n    /**\r\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n    * @param newOwner The address to transfer ownership to.\r\n    */\r\n    function transferOwnership(address newOwner) public onlyOwner {\r\n      _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n    * @dev Transfers control of the contract to a newOwner.\r\n    * @param newOwner The address to transfer ownership to.\r\n    */\r\n    function _transferOwnership(address newOwner) internal {\r\n      require(newOwner != address(0));\r\n      emit OwnershipTransferred(_owner, newOwner);\r\n      _owner = newOwner;\r\n    }\r\n  }\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The Ownable contract has an owner address, and provides basic authorization control functions, this simplifies the implementation of \"user permissions\".",
						"methods": {
							"constructor": {
								"details": "The Ownable constructor sets the original `owner` of the contract to the sender account."
							},
							"isOwner()": {
								"return": "true if `msg.sender` is the owner of the contract."
							},
							"owner()": {
								"return": "the address of the owner."
							},
							"renounceOwnership()": {
								"details": "Allows the current owner to relinquish control of the contract."
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						},
						"title": "Ownable"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The Ownable contract has an owner address, and provides basic authorization control functions, this simplifies the implementation of \\\"user permissions\\\".\",\"methods\":{\"constructor\":{\"details\":\"The Ownable constructor sets the original `owner` of the contract to the sender account.\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Ownable\"},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ownable.sol\":{\"keccak256\":\"0x3975d7bc1eed490de45aea9989ef691dc5cbe6fbde88cde80f1b570825a0f198\",\"urls\":[\"bzz-raw://78f615823cde88d4d5e3d07cda3cfad7f0bc57ff6ea5f0900a24b0c642cc80b1\",\"dweb:/ipfs/QmR1UAo7Ym95oG2sXf84HpE1pH7F6Aeah8ruZPt4CMfWMg\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"renounceOwnership()": {
								"notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
							}
						}
					}
				}
			},
			"contracts/zombiefactory.sol": {
				"ZombieFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "zombieId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "dna",
									"type": "uint256"
								}
							],
							"name": "NewZombie",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								}
							],
							"name": "createRandomZombie",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "zombieToOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "zombies",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "dna",
									"type": "uint256"
								},
								{
									"internalType": "uint32",
									"name": "level",
									"type": "uint32"
								},
								{
									"internalType": "uint32",
									"name": "readyTime",
									"type": "uint32"
								},
								{
									"internalType": "uint16",
									"name": "winCount",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "lossCount",
									"type": "uint16"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"isOwner()": {
								"return": "true if `msg.sender` is the owner of the contract."
							},
							"owner()": {
								"return": "the address of the owner."
							},
							"renounceOwnership()": {
								"details": "Allows the current owner to relinquish control of the contract."
							},
							"transferOwnership(address)": {
								"details": "Allows the current owner to transfer control of the contract to a newOwner.",
								"params": {
									"newOwner": "The address to transfer ownership to."
								}
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/zombiefactory.sol\":62:1311  contract ZombieFactory is Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/zombiefactory.sol\":184:186  16 */\n  0x10\n    /* \"contracts/zombiefactory.sol\":167:186  uint dnaDigits = 16 */\n  0x01\n  sstore\n    /* \"contracts/zombiefactory.sol\":217:226  dnaDigits */\n  sload(0x01)\n    /* \"contracts/zombiefactory.sol\":211:213  10 */\n  0x0a\n    /* \"contracts/zombiefactory.sol\":211:226  10 ** dnaDigits */\n  exp\n    /* \"contracts/zombiefactory.sol\":193:226  uint dnaModulus = 10 ** dnaDigits */\n  0x02\n  sstore\n    /* \"contracts/zombiefactory.sol\":253:259  1 days */\n  0x015180\n    /* \"contracts/zombiefactory.sol\":233:259  uint cooldownTime = 1 days */\n  0x03\n  sstore\n    /* \"contracts/ownable.sol\":572:582  msg.sender */\n  caller\n    /* \"contracts/ownable.sol\":563:569  _owner */\n  0x00\n  dup1\n    /* \"contracts/ownable.sol\":563:582  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ownable.sol\":629:635  _owner */\n  0x00\n  dup1\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ownable.sol\":596:636  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/ownable.sol\":625:626  0 */\n  0x00\n    /* \"contracts/ownable.sol\":596:636  OwnershipTransferred(address(0), _owner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/zombiefactory.sol\":62:1311  contract ZombieFactory is Ownable {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/zombiefactory.sol\":62:1311  contract ZombieFactory is Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/zombiefactory.sol\":62:1311  contract ZombieFactory is Ownable {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7bff0a01\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x7bff0a01\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x2052465e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x528b7b8f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/zombiefactory.sol\":430:453  Zombie[] public zombies */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_12:\n        /* \"contracts/zombiefactory.sol\":430:453  Zombie[] public zombies */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup8\n      dup2\n      mstore\n      0x20\n      add\n      dup7\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffff\n      and\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup9\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_14:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_14)\n    tag_16:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/zombiefactory.sol\":430:453  Zombie[] public zombies */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_17\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_17:\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/zombiefactory.sol\":462:508  mapping (uint => address) public zombieToOwner */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_19:\n        /* \"contracts/zombiefactory.sol\":462:508  mapping (uint => address) public zombieToOwner */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_20\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownable.sol\":1404:1540  function renounceOwnership() public onlyOwner {\r... */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/zombiefactory.sol\":1054:1306  function createRandomZombie(string memory _name) public {\r... */\n    tag_6:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n        /* \"contracts/zombiefactory.sol\":1054:1306  function createRandomZombie(string memory _name) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":8:19   */\n      dup2\n        /* \"--CODEGEN--\":5:33   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n        /* \"contracts/zombiefactory.sol\":1054:1306  function createRandomZombie(string memory _name) public {\r... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_26:\n        /* \"contracts/zombiefactory.sol\":1054:1306  function createRandomZombie(string memory _name) public {\r... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_27:\n        /* \"contracts/zombiefactory.sol\":1054:1306  function createRandomZombie(string memory _name) public {\r... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"contracts/zombiefactory.sol\":1054:1306  function createRandomZombie(string memory _name) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/ownable.sol\":710:786  function owner() public view returns(address) {\r... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownable.sol\":1034:1123  function isOwner() public view returns(bool) {\r... */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ownable.sol\":1714:1821  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_9:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"contracts/ownable.sol\":1714:1821  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_35\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/zombiefactory.sol\":430:453  Zombie[] public zombies */\n    tag_13:\n      0x04\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_36\n      jumpi\n      invalid\n    tag_36:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_38\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_39\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_38)\n    tag_39:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_40:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_40\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_38:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      0x04\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      0x0a\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":462:508  mapping (uint => address) public zombieToOwner */\n    tag_20:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ownable.sol\":1404:1540  function renounceOwnership() public onlyOwner {\r... */\n    tag_22:\n        /* \"contracts/ownable.sol\":915:924  isOwner() */\n      tag_42\n        /* \"contracts/ownable.sol\":915:922  isOwner */\n      tag_32\n        /* \"contracts/ownable.sol\":915:924  isOwner() */\n      jump\t// in\n    tag_42:\n        /* \"contracts/ownable.sol\":907:925  require(isOwner()) */\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n        /* \"contracts/ownable.sol\":1501:1502  0 */\n      0x00\n        /* \"contracts/ownable.sol\":1464:1504  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1485:1491  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1464:1504  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ownable.sol\":1530:1531  0 */\n      0x00\n        /* \"contracts/ownable.sol\":1513:1519  _owner */\n      dup1\n      0x00\n        /* \"contracts/ownable.sol\":1513:1532  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ownable.sol\":1404:1540  function renounceOwnership() public onlyOwner {\r... */\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":1054:1306  function createRandomZombie(string memory _name) public {\r... */\n    tag_28:\n        /* \"contracts/zombiefactory.sol\":1161:1162  0 */\n      0x00\n        /* \"contracts/zombiefactory.sol\":1129:1145  ownerZombieCount */\n      0x06\n        /* \"contracts/zombiefactory.sol\":1129:1157  ownerZombieCount[msg.sender] */\n      0x00\n        /* \"contracts/zombiefactory.sol\":1146:1156  msg.sender */\n      caller\n        /* \"contracts/zombiefactory.sol\":1129:1157  ownerZombieCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/zombiefactory.sol\":1129:1162  ownerZombieCount[msg.sender] == 0 */\n      eq\n        /* \"contracts/zombiefactory.sol\":1121:1163  require(ownerZombieCount[msg.sender] == 0) */\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n        /* \"contracts/zombiefactory.sol\":1174:1186  uint randDna */\n      0x00\n        /* \"contracts/zombiefactory.sol\":1189:1214  _generateRandomDna(_name) */\n      tag_47\n        /* \"contracts/zombiefactory.sol\":1208:1213  _name */\n      dup3\n        /* \"contracts/zombiefactory.sol\":1189:1207  _generateRandomDna */\n      tag_48\n        /* \"contracts/zombiefactory.sol\":1189:1214  _generateRandomDna(_name) */\n      jump\t// in\n    tag_47:\n        /* \"contracts/zombiefactory.sol\":1174:1214  uint randDna = _generateRandomDna(_name) */\n      swap1\n      pop\n        /* \"contracts/zombiefactory.sol\":1255:1258  100 */\n      0x64\n        /* \"contracts/zombiefactory.sol\":1245:1252  randDna */\n      dup2\n        /* \"contracts/zombiefactory.sol\":1245:1258  randDna % 100 */\n      dup2\n      tag_49\n      jumpi\n      invalid\n    tag_49:\n      mod\n        /* \"contracts/zombiefactory.sol\":1235:1242  randDna */\n      dup2\n        /* \"contracts/zombiefactory.sol\":1235:1258  randDna - randDna % 100 */\n      sub\n        /* \"contracts/zombiefactory.sol\":1225:1258  randDna = randDna - randDna % 100 */\n      swap1\n      pop\n        /* \"contracts/zombiefactory.sol\":1269:1298  _createZombie(_name, randDna) */\n      tag_50\n        /* \"contracts/zombiefactory.sol\":1283:1288  _name */\n      dup3\n        /* \"contracts/zombiefactory.sol\":1290:1297  randDna */\n      dup3\n        /* \"contracts/zombiefactory.sol\":1269:1282  _createZombie */\n      tag_51\n        /* \"contracts/zombiefactory.sol\":1269:1298  _createZombie(_name, randDna) */\n      jump\t// in\n    tag_50:\n        /* \"contracts/zombiefactory.sol\":1054:1306  function createRandomZombie(string memory _name) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ownable.sol\":710:786  function owner() public view returns(address) {\r... */\n    tag_30:\n        /* \"contracts/ownable.sol\":747:754  address */\n      0x00\n        /* \"contracts/ownable.sol\":772:778  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":765:778  return _owner */\n      swap1\n      pop\n        /* \"contracts/ownable.sol\":710:786  function owner() public view returns(address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ownable.sol\":1034:1123  function isOwner() public view returns(bool) {\r... */\n    tag_32:\n        /* \"contracts/ownable.sol\":1073:1077  bool */\n      0x00\n        /* \"contracts/ownable.sol\":1109:1115  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1095:1115  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":1095:1105  msg.sender */\n      caller\n        /* \"contracts/ownable.sol\":1095:1115  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ownable.sol\":1088:1115  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"contracts/ownable.sol\":1034:1123  function isOwner() public view returns(bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/ownable.sol\":1714:1821  function transferOwnership(address newOwner) public onlyOwner {\r... */\n    tag_35:\n        /* \"contracts/ownable.sol\":915:924  isOwner() */\n      tag_55\n        /* \"contracts/ownable.sol\":915:922  isOwner */\n      tag_32\n        /* \"contracts/ownable.sol\":915:924  isOwner() */\n      jump\t// in\n    tag_55:\n        /* \"contracts/ownable.sol\":907:925  require(isOwner()) */\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n        /* \"contracts/ownable.sol\":1785:1813  _transferOwnership(newOwner) */\n      tag_58\n        /* \"contracts/ownable.sol\":1804:1812  newOwner */\n      dup2\n        /* \"contracts/ownable.sol\":1785:1803  _transferOwnership */\n      tag_59\n        /* \"contracts/ownable.sol\":1785:1813  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_58:\n        /* \"contracts/ownable.sol\":1714:1821  function transferOwnership(address newOwner) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":865:1046  function _generateRandomDna(string memory _str) private view returns (uint) {\r... */\n    tag_48:\n        /* \"contracts/zombiefactory.sol\":935:939  uint */\n      0x00\n        /* \"contracts/zombiefactory.sol\":952:961  uint rand */\n      dup1\n        /* \"contracts/zombiefactory.sol\":996:1000  _str */\n      dup3\n        /* \"contracts/zombiefactory.sol\":979:1001  abi.encodePacked(_str) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_61:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_61)\n    tag_63:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"contracts/zombiefactory.sol\":979:1001  abi.encodePacked(_str) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/zombiefactory.sol\":979:1001  abi.encodePacked(_str) */\n      swap1\n      0x40\n      mstore\n        /* \"contracts/zombiefactory.sol\":969:1002  keccak256(abi.encodePacked(_str)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/zombiefactory.sol\":964:1003  uint(keccak256(abi.encodePacked(_str))) */\n      0x00\n      shr\n        /* \"contracts/zombiefactory.sol\":952:1003  uint rand = uint(keccak256(abi.encodePacked(_str))) */\n      swap1\n      pop\n        /* \"contracts/zombiefactory.sol\":1028:1038  dnaModulus */\n      sload(0x02)\n        /* \"contracts/zombiefactory.sol\":1021:1025  rand */\n      dup2\n        /* \"contracts/zombiefactory.sol\":1021:1038  rand % dnaModulus */\n      dup2\n      tag_64\n      jumpi\n      invalid\n    tag_64:\n      mod\n        /* \"contracts/zombiefactory.sol\":1014:1038  return rand % dnaModulus */\n      swap2\n      pop\n      pop\n        /* \"contracts/zombiefactory.sol\":865:1046  function _generateRandomDna(string memory _str) private view returns (uint) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":566:857  function _createZombie(string memory _name, uint _dna) internal {\r... */\n    tag_51:\n        /* \"contracts/zombiefactory.sol\":641:648  uint id */\n      0x00\n        /* \"contracts/zombiefactory.sol\":724:725  1 */\n      0x01\n        /* \"contracts/zombiefactory.sol\":651:658  zombies */\n      0x04\n        /* \"contracts/zombiefactory.sol\":664:720  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/zombiefactory.sol\":671:676  _name */\n      dup7\n        /* \"contracts/zombiefactory.sol\":664:720  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":678:682  _dna */\n      dup6\n        /* \"contracts/zombiefactory.sol\":664:720  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":684:685  1 */\n      0x01\n        /* \"contracts/zombiefactory.sol\":664:720  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":700:712  cooldownTime */\n      sload(0x03)\n        /* \"contracts/zombiefactory.sol\":694:697  now */\n      timestamp\n        /* \"contracts/zombiefactory.sol\":694:712  now + cooldownTime */\n      add\n        /* \"contracts/zombiefactory.sol\":664:720  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      0xffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":715:716  0 */\n      0x00\n        /* \"contracts/zombiefactory.sol\":664:720  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/zombiefactory.sol\":718:719  0 */\n      0x00\n        /* \"contracts/zombiefactory.sol\":664:720  Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0) */\n      0xffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/zombiefactory.sol\":651:721  zombies.push(Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0)) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x01\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"contracts/zombiefactory.sol\":651:721  zombies.push(Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0)) */\n      swap1\n      0x01\n      dup3\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_67\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x04)\n      dup2\n      sload\n      dup2\n      0xffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x08)\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x0a)\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/zombiefactory.sol\":651:725  zombies.push(Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0)) - 1 */\n      sub\n        /* \"contracts/zombiefactory.sol\":641:725  uint id = zombies.push(Zombie(_name, _dna, 1, uint32(now + cooldownTime), 0, 0)) - 1 */\n      swap1\n      pop\n        /* \"contracts/zombiefactory.sol\":756:766  msg.sender */\n      caller\n        /* \"contracts/zombiefactory.sol\":736:749  zombieToOwner */\n      0x05\n        /* \"contracts/zombiefactory.sol\":736:753  zombieToOwner[id] */\n      0x00\n        /* \"contracts/zombiefactory.sol\":750:752  id */\n      dup4\n        /* \"contracts/zombiefactory.sol\":736:753  zombieToOwner[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/zombiefactory.sol\":736:766  zombieToOwner[id] = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/zombiefactory.sol\":777:793  ownerZombieCount */\n      0x06\n        /* \"contracts/zombiefactory.sol\":777:805  ownerZombieCount[msg.sender] */\n      0x00\n        /* \"contracts/zombiefactory.sol\":794:804  msg.sender */\n      caller\n        /* \"contracts/zombiefactory.sol\":777:805  ownerZombieCount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/zombiefactory.sol\":777:807  ownerZombieCount[msg.sender]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/zombiefactory.sol\":823:849  NewZombie(id, _name, _dna) */\n      0x88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b7\n        /* \"contracts/zombiefactory.sol\":833:835  id */\n      dup2\n        /* \"contracts/zombiefactory.sol\":837:842  _name */\n      dup5\n        /* \"contracts/zombiefactory.sol\":844:848  _dna */\n      dup5\n        /* \"contracts/zombiefactory.sol\":823:849  NewZombie(id, _name, _dna) */\n      mload(0x40)\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup5\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_69:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_71\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_69)\n    tag_71:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/zombiefactory.sol\":823:849  NewZombie(id, _name, _dna) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_72:\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/zombiefactory.sol\":566:857  function _createZombie(string memory _name, uint _dna) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ownable.sol\":1968:2149  function _transferOwnership(address newOwner) internal {\r... */\n    tag_59:\n        /* \"contracts/ownable.sol\":2060:2061  0 */\n      0x00\n        /* \"contracts/ownable.sol\":2040:2062  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":2040:2048  newOwner */\n      dup2\n        /* \"contracts/ownable.sol\":2040:2062  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/ownable.sol\":2032:2063  require(newOwner != address(0)) */\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n        /* \"contracts/ownable.sol\":2106:2114  newOwner */\n      dup1\n        /* \"contracts/ownable.sol\":2077:2115  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":2098:2104  _owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ownable.sol\":2077:2115  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/ownable.sol\":2133:2141  newOwner */\n      dup1\n        /* \"contracts/ownable.sol\":2124:2130  _owner */\n      0x00\n      dup1\n        /* \"contracts/ownable.sol\":2124:2141  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/ownable.sol\":1968:2149  function _transferOwnership(address newOwner) internal {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/zombiefactory.sol\":62:1311  contract ZombieFactory is Ownable {\r... */\n    tag_68:\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      0x1f\n      lt\n      tag_76\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_75)\n    tag_76:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_75\n      jumpi\n      swap2\n      dup3\n      add\n    tag_77:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_78\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_77)\n    tag_78:\n    tag_75:\n      pop\n      swap1\n      pop\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      pop\n      swap1\n      jump\t// out\n    tag_80:\n      tag_81\n      swap2\n      swap1\n    tag_82:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_82)\n    tag_83:\n      pop\n      swap1\n      jump\n    tag_81:\n      swap1\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820e96e4af5069077f58160908eb3d76c28da97375313141336eb3dcdb5a4c11af564736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526010600155600154600a0a60025562015180600355336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3610b75806100e46000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637bff0a011161005b5780637bff0a01146101ec5780638da5cb5b146102a75780638f32d59b146102f1578063f2fde38b146103135761007d565b80632052465e14610082578063528b7b8f14610174578063715018a6146101e2575b600080fd5b6100ae6004803603602081101561009857600080fd5b8101908080359060200190929190505050610357565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b83811015610134578082015181840152602081019050610119565b50505050905090810190601f1680156101615780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b6101a06004803603602081101561018a57600080fd5b8101908080359060200190929190505050610474565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101ea6104a7565b005b6102a56004803603602081101561020257600080fd5b810190808035906020019064010000000081111561021f57600080fd5b82018360208201111561023157600080fd5b8035906020019184600183028401116401000000008311171561025357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610577565b005b6102af6105ed565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102f9610616565b604051808215151515815260200191505060405180910390f35b6103556004803603602081101561032957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061066d565b005b6004818154811061036457fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104105780601f106103e557610100808354040283529160200191610410565b820191906000526020600020905b8154815290600101906020018083116103f357829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104af610616565b6104b857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146105c357600080fd5b60006105ce8261068a565b9050606481816105da57fe5b06810390506105e98282610718565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610675610616565b61067e57600080fd5b610687816109a3565b50565b600080826040516020018082805190602001908083835b602083106106c457805182526020820191506020810190506020830392506106a1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c9050600254818161070f57fe5b06915050919050565b6000600160046040518060c00160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff168152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000190805190602001906107ad929190610a9b565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610962578082015181840152602081019050610947565b50505050905090810190601f16801561098f5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109dd57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610adc57805160ff1916838001178555610b0a565b82800160010185558215610b0a579182015b82811115610b09578251825591602001919060010190610aee565b5b509050610b179190610b1b565b5090565b610b3d91905b80821115610b39576000816000905550600101610b21565b5090565b9056fea265627a7a72315820e96e4af5069077f58160908eb3d76c28da97375313141336eb3dcdb5a4c11af564736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x10 PUSH1 0x1 SSTORE PUSH1 0x1 SLOAD PUSH1 0xA EXP PUSH1 0x2 SSTORE PUSH3 0x15180 PUSH1 0x3 SSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xB75 DUP1 PUSH2 0xE4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BFF0A01 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7BFF0A01 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x313 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2052465E EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x528B7B8F EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP9 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x134 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x161 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x474 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x4A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x577 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x66D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x364 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x410 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x410 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0xA SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4AF PUSH2 0x616 JUMP JUMPDEST PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5CE DUP3 PUSH2 0x68A JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 DUP2 PUSH2 0x5DA JUMPI INVALID JUMPDEST MOD DUP2 SUB SWAP1 POP PUSH2 0x5E9 DUP3 DUP3 PUSH2 0x718 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x675 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x687 DUP2 PUSH2 0x9A3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x6C4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x2 SLOAD DUP2 DUP2 PUSH2 0x70F JUMPI INVALID JUMPDEST MOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 SLOAD TIMESTAMP ADD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x7AD SWAP3 SWAP2 SWAP1 PUSH2 0xA9B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP SUB SWAP1 POP CALLER PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH32 0x88F026AACBBECC90C18411DF4B1185FD8D9BE2470F1962F192BF84A27D0704B7 DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x962 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x947 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x98F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0xADC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB0A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB0A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB09 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xAEE JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB17 SWAP2 SWAP1 PUSH2 0xB1B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xB3D SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB39 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB21 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE9 PUSH15 0x4AF5069077F58160908EB3D76C28DA SWAP8 CALLDATACOPY MSTORE8 SGT EQ SGT CALLDATASIZE 0xEB RETURNDATASIZE 0xCD 0xB5 LOG4 0xC1 BYTE CREATE2 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "62:1249:1:-;;;184:2;167:19;;217:9;;211:2;:15;193:33;;253:6;233:26;;572:10:0;563:6;;:19;;;;;;;;;;;;;;;;;;629:6;;;;;;;;;;;596:40;;625:1;596:40;;;;;;;;;;;;62:1249:1;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c80637bff0a011161005b5780637bff0a01146101ec5780638da5cb5b146102a75780638f32d59b146102f1578063f2fde38b146103135761007d565b80632052465e14610082578063528b7b8f14610174578063715018a6146101e2575b600080fd5b6100ae6004803603602081101561009857600080fd5b8101908080359060200190929190505050610357565b60405180806020018781526020018663ffffffff1663ffffffff1681526020018563ffffffff1663ffffffff1681526020018461ffff1661ffff1681526020018361ffff1661ffff168152602001828103825288818151815260200191508051906020019080838360005b83811015610134578082015181840152602081019050610119565b50505050905090810190601f1680156101615780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b6101a06004803603602081101561018a57600080fd5b8101908080359060200190929190505050610474565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101ea6104a7565b005b6102a56004803603602081101561020257600080fd5b810190808035906020019064010000000081111561021f57600080fd5b82018360208201111561023157600080fd5b8035906020019184600183028401116401000000008311171561025357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610577565b005b6102af6105ed565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102f9610616565b604051808215151515815260200191505060405180910390f35b6103556004803603602081101561032957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061066d565b005b6004818154811061036457fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104105780601f106103e557610100808354040283529160200191610410565b820191906000526020600020905b8154815290600101906020018083116103f357829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104af610616565b6104b857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146105c357600080fd5b60006105ce8261068a565b9050606481816105da57fe5b06810390506105e98282610718565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610675610616565b61067e57600080fd5b610687816109a3565b50565b600080826040516020018082805190602001908083835b602083106106c457805182526020820191506020810190506020830392506106a1565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c9050600254818161070f57fe5b06915050919050565b6000600160046040518060c00160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff168152602001600061ffff168152602001600061ffff168152509080600181540180825580915050906001820390600052602060002090600302016000909192909190915060008201518160000190805190602001906107ad929190610a9b565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610962578082015181840152602081019050610947565b50505050905090810190601f16801561098f5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109dd57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610adc57805160ff1916838001178555610b0a565b82800160010185558215610b0a579182015b82811115610b09578251825591602001919060010190610aee565b5b509050610b179190610b1b565b5090565b610b3d91905b80821115610b39576000816000905550600101610b21565b5090565b9056fea265627a7a72315820e96e4af5069077f58160908eb3d76c28da97375313141336eb3dcdb5a4c11af564736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BFF0A01 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7BFF0A01 EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x313 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2052465E EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x528B7B8F EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP9 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x134 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x119 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x161 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x474 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EA PUSH2 0x4A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x202 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x577 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x66D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x364 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x410 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x410 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD PUSH1 0xA SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x4AF PUSH2 0x616 JUMP JUMPDEST PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x5C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5CE DUP3 PUSH2 0x68A JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 DUP2 PUSH2 0x5DA JUMPI INVALID JUMPDEST MOD DUP2 SUB SWAP1 POP PUSH2 0x5E9 DUP3 DUP3 PUSH2 0x718 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x675 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x687 DUP2 PUSH2 0x9A3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x6C4 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x6A1 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH1 0x2 SLOAD DUP2 DUP2 PUSH2 0x70F JUMPI INVALID JUMPDEST MOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 SLOAD TIMESTAMP ADD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x7AD SWAP3 SWAP2 SWAP1 PUSH2 0xA9B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0xA PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP POP POP SUB SWAP1 POP CALLER PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH32 0x88F026AACBBECC90C18411DF4B1185FD8D9BE2470F1962F192BF84A27D0704B7 DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x962 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x947 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x98F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0xADC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB0A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB0A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB09 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xAEE JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB17 SWAP2 SWAP1 PUSH2 0xB1B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xB3D SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB39 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB21 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE9 PUSH15 0x4AF5069077F58160908EB3D76C28DA SWAP8 CALLDATACOPY MSTORE8 SGT EQ SGT CALLDATASIZE 0xEB RETURNDATASIZE 0xCD 0xB5 LOG4 0xC1 BYTE CREATE2 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "62:1249:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;62:1249:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;430:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;430:23:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;430:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;462:46;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;462:46:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1404:136:0;;;:::i;:::-;;1054:252:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1054:252:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1054:252:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1054:252:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1054:252:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1054:252:1;;;;;;;;;;;;;;;:::i;:::-;;710:76:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1034:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1714:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1714:107:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;430:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;462:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;1404:136:0:-;915:9;:7;:9::i;:::-;907:18;;;;;;1501:1;1464:40;;1485:6;;;;;;;;;;;1464:40;;;;;;;;;;;;1530:1;1513:6;;:19;;;;;;;;;;;;;;;;;;1404:136::o;1054:252:1:-;1161:1;1129:16;:28;1146:10;1129:28;;;;;;;;;;;;;;;;:33;1121:42;;;;;;1174:12;1189:25;1208:5;1189:18;:25::i;:::-;1174:40;;1255:3;1245:7;:13;;;;;;1235:7;:23;1225:33;;1269:29;1283:5;1290:7;1269:13;:29::i;:::-;1054:252;;:::o;710:76:0:-;747:7;772:6;;;;;;;;;;;765:13;;710:76;:::o;1034:89::-;1073:4;1109:6;;;;;;;;;;;1095:20;;:10;:20;;;1088:27;;1034:89;:::o;1714:107::-;915:9;:7;:9::i;:::-;907:18;;;;;;1785:28;1804:8;1785:18;:28::i;:::-;1714:107;:::o;865:181:1:-;935:4;952:9;996:4;979:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;979:22:1;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;979:22:1;;;969:33;;;;;;964:39;;952:51;;1028:10;;1021:4;:17;;;;;;1014:24;;;865:181;;;:::o;566:291::-;641:7;724:1;651:7;664:56;;;;;;;;671:5;664:56;;;;678:4;664:56;;;;684:1;664:56;;;;;;700:12;;694:3;:18;664:56;;;;;;715:1;664:56;;;;;;718:1;664:56;;;;;651:70;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;651:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:74;641:84;;756:10;736:13;:17;750:2;736:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;777:16;:28;794:10;777:28;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;823:26;833:2;837:5;844:4;823:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;823:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;566:291;;;:::o;1968:181:0:-;2060:1;2040:22;;:8;:22;;;;2032:31;;;;;;2106:8;2077:38;;2098:6;;;;;;;;;;;2077:38;;;;;;;;;;;;2133:8;2124:6;;:17;;;;;;;;;;;;;;;;;;1968:181;:::o;62:1249:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "586600",
								"executionCost": "84723",
								"totalCost": "671323"
							},
							"external": {
								"createRandomZombie(string)": "infinite",
								"isOwner()": "1122",
								"owner()": "1083",
								"renounceOwnership()": "24342",
								"transferOwnership(address)": "24520",
								"zombieToOwner(uint256)": "1223",
								"zombies(uint256)": "infinite"
							},
							"internal": {
								"_createZombie(string memory,uint256)": "infinite",
								"_generateRandomDna(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 1311,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 62,
									"end": 1311,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 62,
									"end": 1311,
									"name": "MSTORE"
								},
								{
									"begin": 184,
									"end": 186,
									"name": "PUSH",
									"value": "10"
								},
								{
									"begin": 167,
									"end": 186,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 167,
									"end": 186,
									"name": "SSTORE"
								},
								{
									"begin": 217,
									"end": 226,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 217,
									"end": 226,
									"name": "SLOAD"
								},
								{
									"begin": 211,
									"end": 213,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 211,
									"end": 226,
									"name": "EXP"
								},
								{
									"begin": 193,
									"end": 226,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 193,
									"end": 226,
									"name": "SSTORE"
								},
								{
									"begin": 253,
									"end": 259,
									"name": "PUSH",
									"value": "15180"
								},
								{
									"begin": 233,
									"end": 259,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 233,
									"end": 259,
									"name": "SSTORE"
								},
								{
									"begin": 572,
									"end": 582,
									"name": "CALLER"
								},
								{
									"begin": 563,
									"end": 569,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 563,
									"end": 569,
									"name": "DUP1"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "EXP"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "DUP2"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "SLOAD"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "DUP2"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "MUL"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "NOT"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "AND"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "SWAP1"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "DUP4"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "AND"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "MUL"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "OR"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "SWAP1"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "SSTORE"
								},
								{
									"begin": 563,
									"end": 582,
									"name": "POP"
								},
								{
									"begin": 629,
									"end": 635,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP1"
								},
								{
									"begin": 629,
									"end": 635,
									"name": "SWAP1"
								},
								{
									"begin": 629,
									"end": 635,
									"name": "SLOAD"
								},
								{
									"begin": 629,
									"end": 635,
									"name": "SWAP1"
								},
								{
									"begin": 629,
									"end": 635,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 629,
									"end": 635,
									"name": "EXP"
								},
								{
									"begin": 629,
									"end": 635,
									"name": "SWAP1"
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DIV"
								},
								{
									"begin": 629,
									"end": 635,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 629,
									"end": 635,
									"name": "AND"
								},
								{
									"begin": 596,
									"end": 636,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 596,
									"end": 636,
									"name": "AND"
								},
								{
									"begin": 625,
									"end": 626,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 596,
									"end": 636,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 596,
									"end": 636,
									"name": "AND"
								},
								{
									"begin": 596,
									"end": 636,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 596,
									"end": 636,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 596,
									"end": 636,
									"name": "MLOAD"
								},
								{
									"begin": 596,
									"end": 636,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 596,
									"end": 636,
									"name": "MLOAD"
								},
								{
									"begin": 596,
									"end": 636,
									"name": "DUP1"
								},
								{
									"begin": 596,
									"end": 636,
									"name": "SWAP2"
								},
								{
									"begin": 596,
									"end": 636,
									"name": "SUB"
								},
								{
									"begin": 596,
									"end": 636,
									"name": "SWAP1"
								},
								{
									"begin": 596,
									"end": 636,
									"name": "LOG3"
								},
								{
									"begin": 62,
									"end": 1311,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 1311,
									"name": "DUP1"
								},
								{
									"begin": 62,
									"end": 1311,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 1311,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1311,
									"name": "CODECOPY"
								},
								{
									"begin": 62,
									"end": 1311,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 62,
									"end": 1311,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820e96e4af5069077f58160908eb3d76c28da97375313141336eb3dcdb5a4c11af564736f6c63430005110032",
									".code": [
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "MSTORE"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "POP"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "LT"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SHR"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "7BFF0A01"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "GT"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "7BFF0A01"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMP"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "2052465E"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "528B7B8F"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "REVERT"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP3"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MLOAD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP8"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP7"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP6"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP5"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP4"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP3"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SUB"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP3"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP9"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MLOAD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MLOAD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP4"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ISZERO"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "JUMPI"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP3"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SUB"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MLOAD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP4"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SUB"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "EXP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SUB"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "NOT"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP8"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MLOAD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SUB"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "RETURN"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "JUMPDEST"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "DUP1"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "ADD"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "SWAP1"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "DUP1"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "DUP1"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "SWAP1"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "ADD"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "SWAP1"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "SWAP3"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "SWAP2"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "SWAP1"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "POP"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "POP"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "POP"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "JUMPDEST"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "MLOAD"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "DUP1"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "DUP3"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "AND"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "AND"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "MSTORE"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "ADD"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "SWAP2"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "POP"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "POP"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "MLOAD"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "DUP1"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "SWAP2"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "SUB"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "SWAP1"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "RETURN"
										},
										{
											"begin": 1404,
											"end": 1540,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1404,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 1404,
											"end": 1540,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1404,
											"end": 1540,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1404,
											"end": 1540,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1404,
											"end": 1540,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1404,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 1404,
											"end": 1540,
											"name": "STOP"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "JUMPDEST"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "DUP1"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "DUP2"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "ADD"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP1"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "DUP1"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "DUP1"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP1"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "ADD"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP1"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 8,
											"end": 19,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "DUP3"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "DUP1"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP1"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "ADD"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP2"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP1"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "DUP1"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "DUP1"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "ADD"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "DUP1"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP2"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "DIV"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "MUL"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "ADD"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "MLOAD"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP1"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "DUP2"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "ADD"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "MSTORE"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "DUP1"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP4"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP3"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP2"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP1"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "DUP2"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "DUP2"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "MSTORE"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "ADD"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "DUP4"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP2"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP3"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP2"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP3"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "SWAP1"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "JUMPDEST"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "STOP"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "JUMPDEST"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "JUMPDEST"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "MLOAD"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "DUP1"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "DUP3"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "AND"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "AND"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "DUP2"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "MSTORE"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "ADD"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "SWAP2"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "POP"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "POP"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "MLOAD"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "DUP1"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "SWAP2"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "SUB"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "SWAP1"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "RETURN"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "JUMPDEST"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "JUMPDEST"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "MLOAD"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "DUP1"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "DUP3"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "ISZERO"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "ISZERO"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "ISZERO"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "ISZERO"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "DUP2"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "MSTORE"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "ADD"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "SWAP2"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "POP"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "POP"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "MLOAD"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "DUP1"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "SWAP2"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "SUB"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "SWAP1"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "RETURN"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "DUP1"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "DUP2"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "ADD"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "SWAP1"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "DUP1"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "DUP1"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "AND"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "SWAP1"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "ADD"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "SWAP1"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "SWAP3"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "SWAP2"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "SWAP1"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "POP"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "POP"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "POP"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "STOP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SLOAD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "LT"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "JUMPI"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "INVALID"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "KECCAK256"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MUL"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SLOAD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ISZERO"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MUL"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SUB"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DIV"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DIV"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MUL"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MLOAD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP3"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP3"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SLOAD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ISZERO"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MUL"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SUB"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DIV"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ISZERO"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "JUMPI"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "LT"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "JUMPI"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP4"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SLOAD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DIV"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MUL"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP4"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "JUMP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP3"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "KECCAK256"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SLOAD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP4"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "GT"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "JUMPI"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP3"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SUB"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP3"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "JUMPDEST"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SLOAD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SLOAD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "EXP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DIV"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SLOAD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "EXP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DIV"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SLOAD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "EXP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DIV"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SLOAD"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "EXP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DIV"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "POP"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "DUP7"
										},
										{
											"begin": 430,
											"end": 453,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "JUMPDEST"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "MSTORE"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "DUP1"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "MSTORE"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "KECCAK256"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "SWAP2"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "POP"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "SLOAD"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "SWAP1"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "EXP"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "SWAP1"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "DIV"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "AND"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "DUP2"
										},
										{
											"begin": 462,
											"end": 508,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1404,
											"end": 1540,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1404,
											"end": 1540,
											"name": "JUMPDEST"
										},
										{
											"begin": 915,
											"end": 924,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 915,
											"end": 922,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 915,
											"end": 924,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 915,
											"end": 924,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 915,
											"end": 924,
											"name": "JUMPDEST"
										},
										{
											"begin": 907,
											"end": 925,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 907,
											"end": 925,
											"name": "JUMPI"
										},
										{
											"begin": 907,
											"end": 925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 907,
											"end": 925,
											"name": "DUP1"
										},
										{
											"begin": 907,
											"end": 925,
											"name": "REVERT"
										},
										{
											"begin": 907,
											"end": 925,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 907,
											"end": 925,
											"name": "JUMPDEST"
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1504,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1504,
											"name": "AND"
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "DUP1"
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "SWAP1"
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "SLOAD"
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "SWAP1"
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "EXP"
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "SWAP1"
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "DIV"
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1485,
											"end": 1491,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1504,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1504,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1504,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1464,
											"end": 1504,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1464,
											"end": 1504,
											"name": "MLOAD"
										},
										{
											"begin": 1464,
											"end": 1504,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1464,
											"end": 1504,
											"name": "MLOAD"
										},
										{
											"begin": 1464,
											"end": 1504,
											"name": "DUP1"
										},
										{
											"begin": 1464,
											"end": 1504,
											"name": "SWAP2"
										},
										{
											"begin": 1464,
											"end": 1504,
											"name": "SUB"
										},
										{
											"begin": 1464,
											"end": 1504,
											"name": "SWAP1"
										},
										{
											"begin": 1464,
											"end": 1504,
											"name": "LOG3"
										},
										{
											"begin": 1530,
											"end": 1531,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "DUP1"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "EXP"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "DUP2"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "SLOAD"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "DUP2"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "MUL"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "NOT"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "AND"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "SWAP1"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "DUP4"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "AND"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "MUL"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "OR"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "SWAP1"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "SSTORE"
										},
										{
											"begin": 1513,
											"end": 1532,
											"name": "POP"
										},
										{
											"begin": 1404,
											"end": 1540,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "JUMPDEST"
										},
										{
											"begin": 1161,
											"end": 1162,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1145,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1129,
											"end": 1157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1156,
											"name": "CALLER"
										},
										{
											"begin": 1129,
											"end": 1157,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1129,
											"end": 1157,
											"name": "AND"
										},
										{
											"begin": 1129,
											"end": 1157,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1129,
											"end": 1157,
											"name": "AND"
										},
										{
											"begin": 1129,
											"end": 1157,
											"name": "DUP2"
										},
										{
											"begin": 1129,
											"end": 1157,
											"name": "MSTORE"
										},
										{
											"begin": 1129,
											"end": 1157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1129,
											"end": 1157,
											"name": "ADD"
										},
										{
											"begin": 1129,
											"end": 1157,
											"name": "SWAP1"
										},
										{
											"begin": 1129,
											"end": 1157,
											"name": "DUP2"
										},
										{
											"begin": 1129,
											"end": 1157,
											"name": "MSTORE"
										},
										{
											"begin": 1129,
											"end": 1157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1129,
											"end": 1157,
											"name": "ADD"
										},
										{
											"begin": 1129,
											"end": 1157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1157,
											"name": "KECCAK256"
										},
										{
											"begin": 1129,
											"end": 1157,
											"name": "SLOAD"
										},
										{
											"begin": 1129,
											"end": 1162,
											"name": "EQ"
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "JUMPI"
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "DUP1"
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "REVERT"
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1121,
											"end": 1163,
											"name": "JUMPDEST"
										},
										{
											"begin": 1174,
											"end": 1186,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1214,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1208,
											"end": 1213,
											"name": "DUP3"
										},
										{
											"begin": 1189,
											"end": 1207,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1189,
											"end": 1214,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1189,
											"end": 1214,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1189,
											"end": 1214,
											"name": "JUMPDEST"
										},
										{
											"begin": 1174,
											"end": 1214,
											"name": "SWAP1"
										},
										{
											"begin": 1174,
											"end": 1214,
											"name": "POP"
										},
										{
											"begin": 1255,
											"end": 1258,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1245,
											"end": 1252,
											"name": "DUP2"
										},
										{
											"begin": 1245,
											"end": 1258,
											"name": "DUP2"
										},
										{
											"begin": 1245,
											"end": 1258,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1245,
											"end": 1258,
											"name": "JUMPI"
										},
										{
											"begin": 1245,
											"end": 1258,
											"name": "INVALID"
										},
										{
											"begin": 1245,
											"end": 1258,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1245,
											"end": 1258,
											"name": "JUMPDEST"
										},
										{
											"begin": 1245,
											"end": 1258,
											"name": "MOD"
										},
										{
											"begin": 1235,
											"end": 1242,
											"name": "DUP2"
										},
										{
											"begin": 1235,
											"end": 1258,
											"name": "SUB"
										},
										{
											"begin": 1225,
											"end": 1258,
											"name": "SWAP1"
										},
										{
											"begin": 1225,
											"end": 1258,
											"name": "POP"
										},
										{
											"begin": 1269,
											"end": 1298,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP3"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "DUP3"
										},
										{
											"begin": 1269,
											"end": 1282,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1269,
											"end": 1298,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1269,
											"end": 1298,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1269,
											"end": 1298,
											"name": "JUMPDEST"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "POP"
										},
										{
											"begin": 1054,
											"end": 1306,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "JUMPDEST"
										},
										{
											"begin": 747,
											"end": 754,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 772,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 772,
											"end": 778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 772,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 772,
											"end": 778,
											"name": "SLOAD"
										},
										{
											"begin": 772,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 772,
											"end": 778,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 772,
											"end": 778,
											"name": "EXP"
										},
										{
											"begin": 772,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 772,
											"end": 778,
											"name": "DIV"
										},
										{
											"begin": 772,
											"end": 778,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 772,
											"end": 778,
											"name": "AND"
										},
										{
											"begin": 765,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 765,
											"end": 778,
											"name": "POP"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "SWAP1"
										},
										{
											"begin": 710,
											"end": 786,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "JUMPDEST"
										},
										{
											"begin": 1073,
											"end": 1077,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "DUP1"
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "SWAP1"
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "SLOAD"
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "SWAP1"
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "EXP"
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "SWAP1"
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "DIV"
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "AND"
										},
										{
											"begin": 1095,
											"end": 1115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1115,
											"name": "AND"
										},
										{
											"begin": 1095,
											"end": 1105,
											"name": "CALLER"
										},
										{
											"begin": 1095,
											"end": 1115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1115,
											"name": "AND"
										},
										{
											"begin": 1095,
											"end": 1115,
											"name": "EQ"
										},
										{
											"begin": 1088,
											"end": 1115,
											"name": "SWAP1"
										},
										{
											"begin": 1088,
											"end": 1115,
											"name": "POP"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "SWAP1"
										},
										{
											"begin": 1034,
											"end": 1123,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 915,
											"end": 924,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 915,
											"end": 922,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 915,
											"end": 924,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 915,
											"end": 924,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 915,
											"end": 924,
											"name": "JUMPDEST"
										},
										{
											"begin": 907,
											"end": 925,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 907,
											"end": 925,
											"name": "JUMPI"
										},
										{
											"begin": 907,
											"end": 925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 907,
											"end": 925,
											"name": "DUP1"
										},
										{
											"begin": 907,
											"end": 925,
											"name": "REVERT"
										},
										{
											"begin": 907,
											"end": 925,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 907,
											"end": 925,
											"name": "JUMPDEST"
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 1804,
											"end": 1812,
											"name": "DUP2"
										},
										{
											"begin": 1785,
											"end": 1803,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "JUMPDEST"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "POP"
										},
										{
											"begin": 1714,
											"end": 1821,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 865,
											"end": 1046,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 865,
											"end": 1046,
											"name": "JUMPDEST"
										},
										{
											"begin": 935,
											"end": 939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 952,
											"end": 961,
											"name": "DUP1"
										},
										{
											"begin": 996,
											"end": 1000,
											"name": "DUP3"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "MLOAD"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "DUP3"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "MLOAD"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "SWAP1"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "SWAP1"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "DUP1"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "DUP4"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "SWAP1"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "ADD"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "SWAP2"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "SWAP1"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 979,
											"end": 1001,
											"name": "MSTORE"
										},
										{
											"begin": 969,
											"end": 1002,
											"name": "DUP1"
										},
										{
											"begin": 969,
											"end": 1002,
											"name": "MLOAD"
										},
										{
											"begin": 969,
											"end": 1002,
											"name": "SWAP1"
										},
										{
											"begin": 969,
											"end": 1002,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 969,
											"end": 1002,
											"name": "ADD"
										},
										{
											"begin": 969,
											"end": 1002,
											"name": "KECCAK256"
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 964,
											"end": 1003,
											"name": "SHR"
										},
										{
											"begin": 952,
											"end": 1003,
											"name": "SWAP1"
										},
										{
											"begin": 952,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 1028,
											"end": 1038,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1028,
											"end": 1038,
											"name": "SLOAD"
										},
										{
											"begin": 1021,
											"end": 1025,
											"name": "DUP2"
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "DUP2"
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "JUMPI"
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "INVALID"
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "JUMPDEST"
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "MOD"
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "SWAP2"
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "POP"
										},
										{
											"begin": 1014,
											"end": 1038,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1046,
											"name": "SWAP2"
										},
										{
											"begin": 865,
											"end": 1046,
											"name": "SWAP1"
										},
										{
											"begin": 865,
											"end": 1046,
											"name": "POP"
										},
										{
											"begin": 865,
											"end": 1046,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 566,
											"end": 857,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 566,
											"end": 857,
											"name": "JUMPDEST"
										},
										{
											"begin": 641,
											"end": 648,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 651,
											"end": 658,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "MLOAD"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "DUP1"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "ADD"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "MSTORE"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "DUP1"
										},
										{
											"begin": 671,
											"end": 676,
											"name": "DUP7"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "DUP2"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "MSTORE"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "ADD"
										},
										{
											"begin": 678,
											"end": 682,
											"name": "DUP6"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "DUP2"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "MSTORE"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "ADD"
										},
										{
											"begin": 684,
											"end": 685,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "AND"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "DUP2"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "MSTORE"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "ADD"
										},
										{
											"begin": 700,
											"end": 712,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 700,
											"end": 712,
											"name": "SLOAD"
										},
										{
											"begin": 694,
											"end": 697,
											"name": "TIMESTAMP"
										},
										{
											"begin": 694,
											"end": 712,
											"name": "ADD"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "AND"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "DUP2"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "MSTORE"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "ADD"
										},
										{
											"begin": 715,
											"end": 716,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "AND"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "DUP2"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "MSTORE"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "ADD"
										},
										{
											"begin": 718,
											"end": 719,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "AND"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "DUP2"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "MSTORE"
										},
										{
											"begin": 664,
											"end": 720,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP3"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SUB"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "MSTORE"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "KECCAK256"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "MUL"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP3"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP3"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "MLOAD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "MLOAD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP3"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "JUMPDEST"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP3"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "MLOAD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SSTORE"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP3"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "MLOAD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "EXP"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SLOAD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "MUL"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "NOT"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "AND"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP4"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "AND"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "MUL"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "OR"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SSTORE"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP3"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "MLOAD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "EXP"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SLOAD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "MUL"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "NOT"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "AND"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP4"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "AND"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "MUL"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "OR"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SSTORE"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP3"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "MLOAD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "EXP"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SLOAD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "MUL"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "NOT"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "AND"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP4"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "AND"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "MUL"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "OR"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SSTORE"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP3"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "MLOAD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "ADD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "EXP"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SLOAD"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP2"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "MUL"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "NOT"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "AND"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "DUP4"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "PUSH",
											"value": "FFFF"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "AND"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "MUL"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "OR"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SWAP1"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "SSTORE"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 721,
											"name": "POP"
										},
										{
											"begin": 651,
											"end": 725,
											"name": "SUB"
										},
										{
											"begin": 641,
											"end": 725,
											"name": "SWAP1"
										},
										{
											"begin": 641,
											"end": 725,
											"name": "POP"
										},
										{
											"begin": 756,
											"end": 766,
											"name": "CALLER"
										},
										{
											"begin": 736,
											"end": 749,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 736,
											"end": 753,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 750,
											"end": 752,
											"name": "DUP4"
										},
										{
											"begin": 736,
											"end": 753,
											"name": "DUP2"
										},
										{
											"begin": 736,
											"end": 753,
											"name": "MSTORE"
										},
										{
											"begin": 736,
											"end": 753,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 736,
											"end": 753,
											"name": "ADD"
										},
										{
											"begin": 736,
											"end": 753,
											"name": "SWAP1"
										},
										{
											"begin": 736,
											"end": 753,
											"name": "DUP2"
										},
										{
											"begin": 736,
											"end": 753,
											"name": "MSTORE"
										},
										{
											"begin": 736,
											"end": 753,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 736,
											"end": 753,
											"name": "ADD"
										},
										{
											"begin": 736,
											"end": 753,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 736,
											"end": 753,
											"name": "KECCAK256"
										},
										{
											"begin": 736,
											"end": 753,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "EXP"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "DUP2"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "SLOAD"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "DUP2"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "MUL"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "NOT"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "AND"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "SWAP1"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "DUP4"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "AND"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "MUL"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "OR"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "SWAP1"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "SSTORE"
										},
										{
											"begin": 736,
											"end": 766,
											"name": "POP"
										},
										{
											"begin": 777,
											"end": 793,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 794,
											"end": 804,
											"name": "CALLER"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "AND"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "AND"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "DUP2"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "MSTORE"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "ADD"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "SWAP1"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "DUP2"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "MSTORE"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "ADD"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "KECCAK256"
										},
										{
											"begin": 777,
											"end": 805,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 777,
											"end": 807,
											"name": "DUP2"
										},
										{
											"begin": 777,
											"end": 807,
											"name": "SLOAD"
										},
										{
											"begin": 777,
											"end": 807,
											"name": "DUP1"
										},
										{
											"begin": 777,
											"end": 807,
											"name": "SWAP3"
										},
										{
											"begin": 777,
											"end": 807,
											"name": "SWAP2"
										},
										{
											"begin": 777,
											"end": 807,
											"name": "SWAP1"
										},
										{
											"begin": 777,
											"end": 807,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 777,
											"end": 807,
											"name": "ADD"
										},
										{
											"begin": 777,
											"end": 807,
											"name": "SWAP2"
										},
										{
											"begin": 777,
											"end": 807,
											"name": "SWAP1"
										},
										{
											"begin": 777,
											"end": 807,
											"name": "POP"
										},
										{
											"begin": 777,
											"end": 807,
											"name": "SSTORE"
										},
										{
											"begin": 777,
											"end": 807,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "PUSH",
											"value": "88F026AACBBECC90C18411DF4B1185FD8D9BE2470F1962F192BF84A27D0704B7"
										},
										{
											"begin": 833,
											"end": 835,
											"name": "DUP2"
										},
										{
											"begin": 837,
											"end": 842,
											"name": "DUP5"
										},
										{
											"begin": 844,
											"end": 848,
											"name": "DUP5"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "MLOAD"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP5"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "MSTORE"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP4"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "MSTORE"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP3"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "SUB"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP3"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "MSTORE"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP5"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "MLOAD"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "MSTORE"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "SWAP2"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "MLOAD"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP4"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "AND"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "ISZERO"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "JUMPI"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP3"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "SUB"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "MLOAD"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP4"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "SUB"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "EXP"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "SUB"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "NOT"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "AND"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "MSTORE"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "ADD"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "SWAP2"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "JUMPDEST"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "SWAP5"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "MLOAD"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "DUP1"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "SWAP2"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "SUB"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 823,
											"end": 849,
											"name": "LOG1"
										},
										{
											"begin": 566,
											"end": 857,
											"name": "POP"
										},
										{
											"begin": 566,
											"end": 857,
											"name": "POP"
										},
										{
											"begin": 566,
											"end": 857,
											"name": "POP"
										},
										{
											"begin": 566,
											"end": 857,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1968,
											"end": 2149,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 1968,
											"end": 2149,
											"name": "JUMPDEST"
										},
										{
											"begin": 2060,
											"end": 2061,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2062,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2040,
											"end": 2062,
											"name": "AND"
										},
										{
											"begin": 2040,
											"end": 2048,
											"name": "DUP2"
										},
										{
											"begin": 2040,
											"end": 2062,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2040,
											"end": 2062,
											"name": "AND"
										},
										{
											"begin": 2040,
											"end": 2062,
											"name": "EQ"
										},
										{
											"begin": 2040,
											"end": 2062,
											"name": "ISZERO"
										},
										{
											"begin": 2032,
											"end": 2063,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2032,
											"end": 2063,
											"name": "JUMPI"
										},
										{
											"begin": 2032,
											"end": 2063,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2063,
											"name": "DUP1"
										},
										{
											"begin": 2032,
											"end": 2063,
											"name": "REVERT"
										},
										{
											"begin": 2032,
											"end": 2063,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2032,
											"end": 2063,
											"name": "JUMPDEST"
										},
										{
											"begin": 2106,
											"end": 2114,
											"name": "DUP1"
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "AND"
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "DUP1"
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "SWAP1"
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "SLOAD"
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "SWAP1"
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "EXP"
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "SWAP1"
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "DIV"
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "AND"
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "AND"
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "MLOAD"
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "MLOAD"
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "DUP1"
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "SWAP2"
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "SUB"
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "SWAP1"
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "LOG3"
										},
										{
											"begin": 2133,
											"end": 2141,
											"name": "DUP1"
										},
										{
											"begin": 2124,
											"end": 2130,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2130,
											"name": "DUP1"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "EXP"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "DUP2"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "SLOAD"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "DUP2"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "MUL"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "NOT"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "AND"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "SWAP1"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "DUP4"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "AND"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "MUL"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "OR"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "SWAP1"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "SSTORE"
										},
										{
											"begin": 2124,
											"end": 2141,
											"name": "POP"
										},
										{
											"begin": 1968,
											"end": 2149,
											"name": "POP"
										},
										{
											"begin": 1968,
											"end": 2149,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP3"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SLOAD"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP2"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "AND"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "ISZERO"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "MUL"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SUB"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "AND"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DIV"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "MSTORE"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "KECCAK256"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "ADD"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DIV"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP2"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "ADD"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP3"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP3"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "LT"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "MLOAD"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "NOT"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "AND"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP4"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "ADD"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "OR"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP6"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SSTORE"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMP"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP3"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "ADD"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "ADD"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP6"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SSTORE"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP3"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "ISZERO"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP2"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP3"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "ADD"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP3"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP2"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "GT"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "ISZERO"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP3"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "MLOAD"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP3"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SSTORE"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP2"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "ADD"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP2"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "ADD"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMP"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "POP"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "POP"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP2"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "POP"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP2"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP3"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "GT"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "ISZERO"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "DUP2"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SSTORE"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "POP"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "ADD"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMP"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "POP"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMP"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "SWAP1"
										},
										{
											"begin": 62,
											"end": 1311,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"createRandomZombie(string)": "7bff0a01",
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"zombieToOwner(uint256)": "528b7b8f",
							"zombies(uint256)": "2052465e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"zombieId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewZombie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomZombie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombieToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombies\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"level\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"readyTime\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"winCount\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"lossCount\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/zombiefactory.sol\":\"ZombieFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ownable.sol\":{\"keccak256\":\"0x3975d7bc1eed490de45aea9989ef691dc5cbe6fbde88cde80f1b570825a0f198\",\"urls\":[\"bzz-raw://78f615823cde88d4d5e3d07cda3cfad7f0bc57ff6ea5f0900a24b0c642cc80b1\",\"dweb:/ipfs/QmR1UAo7Ym95oG2sXf84HpE1pH7F6Aeah8ruZPt4CMfWMg\"]},\"contracts/zombiefactory.sol\":{\"keccak256\":\"0x899f049a61906c3168926e88cb6871a6fe830887273f97f14e16342c171bede2\",\"urls\":[\"bzz-raw://d94ad4d12d0820b9e81d54a7f18ea29b581f4224dfbb4f68056a63604ea4f421\",\"dweb:/ipfs/QmYw67SRM9cM1G7LYQSQE3TfeoPz4HutAudEPsqhvHxX6v\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"renounceOwnership()": {
								"notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
							}
						}
					}
				}
			}
		},
		"sources": {
			"contracts/ownable.sol": {
				"ast": {
					"absolutePath": "contracts/ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							108
						]
					},
					"id": 109,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
							"fullyImplemented": true,
							"id": 108,
							"linearizedBaseContracts": [
								108
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 108,
									"src": "262:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "262:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 9,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "328:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "366:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "319:78:0"
									},
									"src": "293:105:0"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "554:90:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 12,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "563:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 13,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "572:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "572:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "563:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "563:19:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 19,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "625:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "617:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "617:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 21,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "629:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "596:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "596:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "EmitStatement",
												"src": "591:45:0"
											}
										]
									},
									"documentation": "@dev The Ownable constructor sets the original `owner` of the contract to the sender\naccount.",
									"id": 25,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "542:2:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "554:0:0"
									},
									"scope": 108,
									"src": "531:113:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "756:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 30,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "772:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 29,
												"id": 31,
												"nodeType": "Return",
												"src": "765:13:0"
											}
										]
									},
									"documentation": "@return the address of the owner.",
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "724:2:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "747:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "746:9:0"
									},
									"scope": 108,
									"src": "710:76:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "898:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 36,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "915:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "915:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															279,
															280
														],
														"referencedDeclaration": 279,
														"src": "907:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "907:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "907:18:0"
											},
											{
												"id": 40,
												"nodeType": "PlaceholderStatement",
												"src": "934:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 42,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "895:2:0"
									},
									"src": "877:66:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "1079:44:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 47,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "1095:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1095:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 49,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1109:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1095:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 51,
												"nodeType": "Return",
												"src": "1088:27:0"
											}
										]
									},
									"documentation": "@return true if `msg.sender` is the owner of the contract.",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1073:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1073:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1072:6:0"
									},
									"scope": 108,
									"src": "1034:89:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1450:90:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 59,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "1485:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1501:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1493:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1493:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 58,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1464:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1464:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "EmitStatement",
												"src": "1459:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 65,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1513:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1530:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1522:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1522:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1513:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1513:19:0"
											}
										]
									},
									"documentation": "@dev Allows the current owner to relinquish control of the contract.\n@notice Renouncing to ownership will leave the contract without an owner.\nIt will not be possible to call the functions with the `onlyOwner`\nmodifier anymore.",
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 56,
											"modifierName": {
												"argumentTypes": null,
												"id": 55,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 42,
												"src": "1440:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1440:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1430:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1450:0:0"
									},
									"scope": 108,
									"src": "1404:136:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1776:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 80,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 74,
															"src": "1804:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 79,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 107,
														"src": "1785:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1785:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "1785:28:0"
											}
										]
									},
									"documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param newOwner The address to transfer ownership to.",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 77,
											"modifierName": {
												"argumentTypes": null,
												"id": 76,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 42,
												"src": "1766:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1766:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1741:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1740:18:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1776:0:0"
									},
									"scope": 108,
									"src": "1714:107:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "2023:126:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 90,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "2040:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2060:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2052:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2052:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2040:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 89,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															279,
															280
														],
														"referencedDeclaration": 279,
														"src": "2032:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2032:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2032:31:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 98,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "2098:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2106:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "2077:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2077:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2072:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 102,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "2124:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 103,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2133:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2124:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "2124:17:0"
											}
										]
									},
									"documentation": "@dev Transfers control of the contract to a newOwner.\n@param newOwner The address to transfer ownership to.",
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1996:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1995:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2023:0:0"
									},
									"scope": 108,
									"src": "1968:181:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 109,
							"src": "238:1916:0"
						}
					],
					"src": "0:2156:0"
				},
				"id": 0
			},
			"contracts/zombiefactory.sol": {
				"ast": {
					"absolutePath": "contracts/zombiefactory.sol",
					"exportedSymbols": {
						"ZombieFactory": [
							261
						]
					},
					"id": 262,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 110,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:1"
						},
						{
							"absolutePath": "contracts/ownable.sol",
							"file": "./ownable.sol",
							"id": 111,
							"nodeType": "ImportDirective",
							"scope": 262,
							"sourceUnit": 109,
							"src": "35:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 112,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 108,
										"src": "88:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$108",
											"typeString": "contract Ownable"
										}
									},
									"id": 113,
									"nodeType": "InheritanceSpecifier",
									"src": "88:7:1"
								}
							],
							"contractDependencies": [
								108
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 261,
							"linearizedBaseContracts": [
								261,
								108
							],
							"name": "ZombieFactory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 121,
									"name": "NewZombie",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"indexed": false,
												"name": "zombieId",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "121:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "121:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"indexed": false,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "136:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "136:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"indexed": false,
												"name": "dna",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "149:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "149:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "120:38:1"
									},
									"src": "105:54:1"
								},
								{
									"constant": false,
									"id": 124,
									"name": "dnaDigits",
									"nodeType": "VariableDeclaration",
									"scope": 261,
									"src": "167:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "167:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3136",
										"id": 123,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "184:2:1",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_16_by_1",
											"typeString": "int_const 16"
										},
										"value": "16"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 129,
									"name": "dnaModulus",
									"nodeType": "VariableDeclaration",
									"scope": 261,
									"src": "193:33:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 125,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "193:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 128,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"argumentTypes": null,
											"hexValue": "3130",
											"id": 126,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "211:2:1",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"argumentTypes": null,
											"id": 127,
											"name": "dnaDigits",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 124,
											"src": "217:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "211:15:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 132,
									"name": "cooldownTime",
									"nodeType": "VariableDeclaration",
									"scope": 261,
									"src": "233:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 130,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "233:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "31",
										"id": 131,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "253:6:1",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "ZombieFactory.Zombie",
									"id": 145,
									"members": [
										{
											"constant": false,
											"id": 134,
											"name": "name",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "291:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 133,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "291:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 136,
											"name": "dna",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "311:8:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 135,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "311:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 138,
											"name": "level",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "328:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 137,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "328:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 140,
											"name": "readyTime",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "349:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 139,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "349:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 142,
											"name": "winCount",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "374:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 141,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "374:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 144,
											"name": "lossCount",
											"nodeType": "VariableDeclaration",
											"scope": 145,
											"src": "398:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 143,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "398:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Zombie",
									"nodeType": "StructDefinition",
									"scope": 261,
									"src": "268:154:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 148,
									"name": "zombies",
									"nodeType": "VariableDeclaration",
									"scope": 261,
									"src": "430:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Zombie_$145_storage_$dyn_storage",
										"typeString": "struct ZombieFactory.Zombie[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 146,
											"name": "Zombie",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 145,
											"src": "430:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Zombie_$145_storage_ptr",
												"typeString": "struct ZombieFactory.Zombie"
											}
										},
										"id": 147,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "430:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Zombie_$145_storage_$dyn_storage_ptr",
											"typeString": "struct ZombieFactory.Zombie[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 152,
									"name": "zombieToOwner",
									"nodeType": "VariableDeclaration",
									"scope": 261,
									"src": "462:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 151,
										"keyType": {
											"id": 149,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "471:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "462:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 150,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "479:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 156,
									"name": "ownerZombieCount",
									"nodeType": "VariableDeclaration",
									"scope": 261,
									"src": "515:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 155,
										"keyType": {
											"id": 153,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "524:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "515:25:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 154,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "535:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "630:227:1",
										"statements": [
											{
												"assignments": [
													164
												],
												"declarations": [
													{
														"constant": false,
														"id": 164,
														"name": "id",
														"nodeType": "VariableDeclaration",
														"scope": 202,
														"src": "641:7:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 163,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "641:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 182,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 168,
																		"name": "_name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 158,
																		"src": "671:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 169,
																		"name": "_dna",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 160,
																		"src": "678:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "684:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 174,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"id": 172,
																					"name": "now",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 278,
																					"src": "694:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"argumentTypes": null,
																					"id": 173,
																					"name": "cooldownTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 132,
																					"src": "700:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "694:18:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "687:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint32_$",
																				"typeString": "type(uint32)"
																			},
																			"typeName": "uint32"
																		},
																		"id": 175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "687:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "715:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "718:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		{
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 167,
																	"name": "Zombie",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "664:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_Zombie_$145_storage_ptr_$",
																		"typeString": "type(struct ZombieFactory.Zombie storage pointer)"
																	}
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "structConstructorCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "664:56:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Zombie_$145_memory",
																	"typeString": "struct ZombieFactory.Zombie memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Zombie_$145_memory",
																	"typeString": "struct ZombieFactory.Zombie memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 165,
																"name": "zombies",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "651:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Zombie_$145_storage_$dyn_storage",
																	"typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
																}
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "push",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "651:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Zombie_$145_storage_$returns$_t_uint256_$",
																"typeString": "function (struct ZombieFactory.Zombie storage ref) returns (uint256)"
															}
														},
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "651:70:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "724:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "651:74:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "641:84:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 183,
															"name": "zombieToOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "736:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 185,
														"indexExpression": {
															"argumentTypes": null,
															"id": 184,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "736:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 186,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "756:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "756:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "736:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "736:30:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "777:30:1",
													"subExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 190,
															"name": "ownerZombieCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "777:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 193,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 191,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "794:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "794:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "777:28:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "777:30:1"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 197,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "833:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 198,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "837:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 199,
															"name": "_dna",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "844:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 196,
														"name": "NewZombie",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "823:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,string memory,uint256)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "823:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "EmitStatement",
												"src": "818:31:1"
											}
										]
									},
									"documentation": null,
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_createZombie",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "589:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 157,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "589:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "_dna",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "610:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "610:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "588:32:1"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "630:0:1"
									},
									"scope": 261,
									"src": "566:291:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "941:105:1",
										"statements": [
											{
												"assignments": [
													211
												],
												"declarations": [
													{
														"constant": false,
														"id": 211,
														"name": "rand",
														"nodeType": "VariableDeclaration",
														"scope": 225,
														"src": "952:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 210,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "952:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 220,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 216,
																			"name": "_str",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 205,
																			"src": "996:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 214,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 263,
																			"src": "979:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "979:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "979:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 213,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "969:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "969:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "964:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": "uint"
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "964:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "952:51:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 221,
														"name": "rand",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1021:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 222,
														"name": "dnaModulus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "1028:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1021:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 209,
												"id": 224,
												"nodeType": "Return",
												"src": "1014:24:1"
											}
										]
									},
									"documentation": null,
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_generateRandomDna",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"name": "_str",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "893:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "893:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "892:20:1"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "935:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "935:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "934:6:1"
									},
									"scope": 261,
									"src": "865:181:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "1110:196:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 232,
																	"name": "ownerZombieCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "1129:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 235,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 233,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 276,
																		"src": "1146:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1146:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1129:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1161:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1129:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															279,
															280
														],
														"referencedDeclaration": 279,
														"src": "1121:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1121:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "ExpressionStatement",
												"src": "1121:42:1"
											},
											{
												"assignments": [
													241
												],
												"declarations": [
													{
														"constant": false,
														"id": 241,
														"name": "randDna",
														"nodeType": "VariableDeclaration",
														"scope": 259,
														"src": "1174:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 240,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1174:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 243,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "1208:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "_generateRandomDna",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1189:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (string memory) view returns (uint256)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1189:25:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1174:40:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 246,
														"name": "randDna",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "1225:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 247,
															"name": "randDna",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "1235:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 248,
																"name": "randDna",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1245:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1255:3:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1245:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1235:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1225:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "1225:33:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 255,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "1283:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 256,
															"name": "randDna",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "1290:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 254,
														"name": "_createZombie",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1269:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,uint256)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1269:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "1269:29:1"
											}
										]
									},
									"documentation": null,
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createRandomZombie",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"name": "_name",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1082:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 227,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1082:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1081:21:1"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1110:0:1"
									},
									"scope": 261,
									"src": "1054:252:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 262,
							"src": "62:1249:1"
						}
					],
					"src": "0:1313:1"
				},
				"id": 1
			}
		}
	}
}